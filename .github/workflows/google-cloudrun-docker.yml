name: Build || Push || Deploy Cloud

on:
  push:
    # branches:
    #   - main
    tags:
      - v*

permissions:
  id-token: write
  contents: read

jobs:
  build-and-push:
    name: Build && Push && Deploy
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository before docker tag
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 1.1: Set up Docker image
      - name: Set up Docker image tag
        id: vars
        run: |
          TAG=${{ github.sha }}
          echo "TAG=$TAG" >> $GITHUB_ENV

      # Step 2: Authenticate to Google Cloud using workload_identity_provider
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCLOUD_SERVICE_ACCOUNT }}

      # Step 3: Set up Cloud SDK
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v2"
        with:
          version: "latest"
      - name: "Use gcloud CLI"
        run: 'gcloud auth list --filter=status:ACTIVE --format="value(account)"'

      # Step 4: Use gcloud CLI (optional step for general configuration, etc.)
      - name: Configure gcloud
        run: |
          gcloud config set project ${{ secrets.GCP_PROJECT_ID }}
          gcloud config set run/region ${{ secrets.GCP_REGION }}

      # Step 5: Login to Google Artifact Registry (GAR)
      - name: Authenticate Docker with Google Artifact Registry
        run: |
          gcloud auth configure-docker ${{ secrets.GCP_ARTIFACT_REGISTRY_HOST }}

      # Step 6: Build Docker image
      #docker tag SOURCE-IMAGE LOCATION-docker.pkg.dev/PROJECT-ID/REPOSITORY/IMAGE:TAG
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.GCP_ARTIFACT_REGISTRY_HOST }}/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPOSITORY_NAME }}/${{ secrets.PROJECT_NAME }}:latest .

      # Step 7: Push Docker image to Google Artifact Registry
      - name: Push Docker image
        run: |
          docker push ${{ secrets.GCP_ARTIFACT_REGISTRY_HOST }}/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPOSITORY_NAME}}/${{ secrets.PROJECT_NAME }}:latest

      # Step 8: Deploy to Cloud Run
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ secrets.PROJECT_NAME }} \
            --image ${{ secrets.GCP_ARTIFACT_REGISTRY_HOST }}/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_REPOSITORY_NAME }}/${{ secrets.PROJECT_NAME }}:latest \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --project ${{ secrets.GCP_PROJECT_ID }} \
            --service-account ${{ secrets.GCLOUD_SERVICE_ACCOUNT }} \
            --allow-unauthenticated

      # Step 9: Allow unauthenticated access
      - name: "gcloud CLI Allowing unauthenticated"
        run: 'gcloud run services add-iam-policy-binding ${{ secrets.PROJECT_NAME }}  --member="allUsers" --role="roles/run.invoker" --region=${{env.REGION}}'
